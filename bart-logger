#!/usr/bin/env python
#
# Executable for generating usage records.
# Part of the SGAS Batch system Reporting Tool (BaRT).
#
# Author: Henrik Thostrup Jensen <htj@ndgf.org>
# Author: Magnus Jonsson <magnus@hpc2n.umu.se>
# Author: Erik Edelmann <edelmann@csc.fi>
# Copyright: Nordic Data Grid Facility (2009, 2010),
#            Nordic e-Infrastructure Collaboration (2018)

import os
import sys
import traceback
import logging
import re

from bart import config, common
from bart.config import BartConfig
from bart.config import BartMapFile

def main():
    # start with command line parsing and various setups
    parser = config.getParser()
    options, args = parser.parse_args()

    # read config file
    cfg = None
    try:
        cfg = BartConfig(options.config)
    except Exception as e:
        sys.stderr.write("Can't read config file: %s\n" % e)
        sys.exit(1)

    config.setup_logfile(options, cfg)

    # Load user map file
    user_map = BartMapFile()
    try:
        user_map_file = cfg.getConfigValue(config.SECTION_COMMON, config.USERMAP, config.DEFAULT_USERMAP_FILE)
        user_map.load(user_map_file)
    except IOError:
        logging.error('IOError while attempting to read user map at %s (missing file?)' % user_map_file)

    # Load vo map file
    vo_map = BartMapFile()
    try:
        vo_map_file = cfg.getConfigValue(config.SECTION_COMMON, config.VOMAP, config.DEFAULT_VOMAP_FILE)
        vo_map.load(vo_map_file)
    except IOError:
        logging.error('IOError while attempting to read vo map at %s (missing file?)' % vo_map_file)

    # get hostname, if missing from config use host fqdn
    hostname = cfg.getConfigValue(config.SECTION_COMMON, config.HOSTNAME)
    if hostname is None:
        import socket
        hostname = socket.getfqdn()

    lrmsObj = None
    for section in cfg.sections():
        if section in ['common','logger']:
            continue

        # Handle lrms sections
        try:
            # Load lrms module
            csection = re.sub("^([a-z])",lambda x: x.group(0).upper(),section)

            logging.info("Module %s loading" % section)

            # import lrms module
            lrmsModule = __import__('bart.%s' % section,globals(),locals(),[csection])
            # Validate cfg options for lrms module
            cfg.validate(section,lrmsModule)
            # Create lrms class
            lrmsClass = getattr(lrmsModule,csection)
            # Instansiate lrms object 
            lrmsObj = lrmsClass(cfg)
            # read state file
            common.readGeneratorState(lrmsObj)

            # create URs
            lrmsObj.generateUsageRecords(hostname, user_map, vo_map)

            # write state file
            common.writeGeneratorState(lrmsObj)

            # log missing user mappings
            suppress_usermap_info = cfg.getConfigValueBool(config.SECTION_COMMON,config.SUPPRESS_USERMAP_INFO,config.DEFAULT_SUPPRESS_USERMAP_INFO)
            if not suppress_usermap_info and lrmsObj.missing_user_mappings:
                users = ','.join(lrmsObj.missing_user_mappings)
                logging.warn('Missing user mapping for the following users: %s' % users)
                
            logging.info('Module %s done' % section)

        except Exception as e:
            logging.error('Got exception while generating usage records:')
            logging.exception(e)
            traceback.print_exc(file=sys.stderr)
            sys.exit(3)
            
    if lrmsObj is None:
        logging.error('No lrms section found in config')       
        sys.exit(3)

if __name__ == '__main__':
    main()

